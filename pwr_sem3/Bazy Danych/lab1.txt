1. SHOW FULL TABLES
2. SELECT title FROM film WHERE length > 120;
3. SELECT title FROM film WHERE rating = 'G' ORDER BY length LIMIT 4;
4. SELECT film.title, language.name FROM film JOIN language ON film.language_id = language.language_id WHERE film.description LIKE "%Drama%";
5. SELECT film.title FROM film JOIN film_category ON film.film_id = film_category.film_id JOIN category ON film_category.category_id = category.category_id WHERE category.name = "Family" AND film.description LIKE "%Documentary%";
6. SELECT film.title FROM film JOIN film_category ON film.film_id = film_category.film_id JOIN category ON film_category.category_id = category.category_id WHERE film.rating <> 'G' AND category.name = "Children";
7. SELECT rating, COUNT(*) FROM film GROUP BY rating;
8. SELECT DISTINCT film.title FROM film JOIN inventory ON film.film_id = inventory.film_id JOIN rental ON inventory.inventory_id = rental.inventory_id WHERE DATE(rental_date) BETWEEN "2005-05-31" AND "2005-06-15" ORDER BY film.title;
9. SELECT actor.first_name, actor.last_name FROM actor JOIN film_actor ON actor.actor_id = film_actor.actor_id WHERE film_actor.film_id IN (SELECT film_id FROM film WHERE special_features LIKE "%Deleted Scenes%") GROUP BY actor.actor_id;
10. SELECT first_name, last_name FROM customer WHERE customer_id IN (SELECT rental.customer_id FROM rental JOIN payment ON rental.rental_id = payment.rental_id WHERE rental.staff_id <> payment.staff_id);
11. SELECT customer.first_name, customer.last_name FROM customer JOIN rental ON rental.customer_id = customer.customer_id GROUP BY customer.customer_id HAVING COUNT(rental.rental_id) > (SELECT COUNT(rental.rental_id) FROM customer JOIN rental ON rental.customer_id = customer.customer_id WHERE customer.email = "MARY.SMITH@sakilacustomer.org");
12. SELECT name1.first_name, name1.last_name, name2.first_name, name2.last_name FROM film_actor AS actor1 JOIN film_actor AS actor2 ON actor1.film_id = actor2.film_id JOIN actor AS name1 ON actor1.actor_id = name1.actor_id JOIN actor AS name2 ON actor2.actor_id = name2.actor_id WHERE actor1.actor_id < actor2.actor_id GROUP BY actor1.actor_id, actor2.actor_id HAVING COUNT(actor1.film_id) > 1;
13. SELECT last_name FROM actor WHERE actor_id NOT IN (SELECT DISTINCT actor.actor_id FROM actor JOIN film_actor ON actor.actor_id = film_actor.actor_id JOIN film ON film_actor.film_id = film.film_id WHERE film.title LIKE "C%");
14. CREATE VIEW action_movies AS SELECT film_actor.actor_id, COUNT(film.film_id) AS no_movies FROM film_actor JOIN film ON film.film_id = film_actor.film_id JOIN film_category ON film.film_id = film_category.film_id JOIN category ON film_category.category_id = category.category_id WHERE category.name = "Action" GROUP BY film_actor.actor_id;
CREATE VIEW horror_movies AS SELECT film_actor.actor_id, COUNT(film.film_id) AS no_movies FROM film_actor JOIN film ON film.film_id = film_actor.film_id JOIN film_category ON film.film_id = film_category.film_id JOIN category ON film_category.category_id = category.category_id WHERE category.name = "Horror" GROUP BY film_actor.actor_id;
SELECT actor.last_name FROM actor LEFT JOIN horror_movies ON actor.actor_id = horror_movies.actor_id JOIN action_movies ON actor.actor_id = action_movies.actor_id WHERE action_movies.no_movies > horror_movies.no_movies OR horror_movies.no_movies IS NULL;
15. SELECT customer.first_name, customer.last_name FROM customer JOIN payment ON customer.customer_id = payment.customer_id GROUP BY customer.customer_id HAVING AVG(payment.amount) < (SELECT AVG(amount) FROM payment WHERE payment_date LIKE "2005-07-30%");
16. UPDATE film SET language_id = (SELECT language_id FROM language WHERE name = "Italian") WHERE title = "YOUNG LANGUAGE";
17. INSERT INTO language(name) VALUES("Spanish");
UPDATE film SET language_id = (SELECT language_id FROM language WHERE name = "Spanish") WHERE film_id IN (SELECT film.film_id FROM film JOIN film_actor ON film.film_id = film_actor.film_id JOIN actor ON film_actor.actor_id = actor.actor_id WHERE actor.first_name = "ED" AND actor.last_name = "CHASE");
18. ALTER TABLE language ADD films_no INT UNSIGNED DEFAULT 0 NOT NULL;
UPDATE language JOIN film ON language.language_id = film.language_id SET language.films_no = (SELECT COUNT(film.film_id) FROM film WHERE film.language_id = language.language_id);
19. ALTER TABLE film DROP COLUMN release_year;
